{"ast":null,"code":"var _jsxFileName = \"/Users/colinharzing/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  } //Word geroepen zodra het root element bestsaat\n\n\n  componentDidMount() {\n    //Haal data op via api\n    fetch('https://jsonplaceholder.typicode.com/users') //Maak er een JSON formaat van\n    .then(response => response.json()) //Voeg de teruggekeerde json data toe aan de Monsters array\n    .then(users => this.setState({\n      monsters: users\n    }));\n  } //Render de DOM\n\n\n  render() {\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"search\",\n      placeholder: \"Search monsters\",\n      onChange: e => this.setState({\n        searchField: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardList, {\n      monsters: this.state.monsters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/colinharzing/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","App","constructor","state","monsters","searchField","componentDidMount","fetch","then","response","json","users","setState","render","filteredMonsters","filter","monster","name","toLowerCase","includes","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAAQC,QAAR,QAAuB,4CAAvB;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID,GAPyB,CAS1B;;;AACAC,EAAAA,iBAAiB,GAAG;AAClB;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACA;AADA,KAECC,IAFD,CAEMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFlB,EAGA;AAHA,KAICF,IAJD,CAIMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAER,MAAAA,QAAQ,EAAEO;AAAZ,KAAd,CAJf;AAKD,GAjByB,CAmB1B;;;AACAE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA4B,KAAKF,KAAvC;AACA,UAAMW,gBAAgB,GAAGV,QAAQ,CAACW,MAAT,CAAgBC,OAAO,IAC5CA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCd,WAAW,CAACa,WAAZ,EAApC,CADqB,CAAzB;AAGA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,QAAQ,EAAEE,CAAC,IAAI,KAAKR,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAEe,CAAC,CAACC,MAAF,CAASC;AAAxB,OAAd,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AAnCyB;;AAsC5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport {CardList} from './components/card-list/card-list.component';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  //Word geroepen zodra het root element bestsaat\n  componentDidMount() {\n    //Haal data op via api\n    fetch('https://jsonplaceholder.typicode.com/users')\n    //Maak er een JSON formaat van\n    .then(response => response.json())\n    //Voeg de teruggekeerde json data toe aan de Monsters array\n    .then(users => this.setState({ monsters: users }));\n  }\n\n  //Render de DOM\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n        monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n    return(\n      <div className=\"App\">\n        <input \n          type='search' \n          placeholder='Search monsters' \n          onChange={e => this.setState({ searchField: e.target.value})}\n        />\n        <CardList monsters={this.state.monsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}